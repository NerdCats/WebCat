{"version":3,"sources":["account/signup/control-message.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,qBAAgC,eAAe,CAAC,CAAA;AAChD,uBAA4B,iBAAiB,CAAC,CAAA;AAC9C,mCAAkC,8BAA8B,CAAC,CAAA;AASjE;IAEI,wBAA6B,QAAqB;QAArB,aAAQ,GAAR,QAAQ,CAAa;IAAI,CAAC;IAEvD,sBAAW,0CAAc;aAAzB;YACI,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAExD,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;gBAClC,IAAI,qBAAqB,SAAQ,CAAC;gBAClC,GAAG,CAAC,CAAC,IAAI,YAAY,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;oBACtC,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;wBAC9C,qBAAqB,GAAG,YAAY,CAAC;oBACzC,CAAC;gBACL,CAAC;gBACD,EAAE,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;oBACxB,MAAM,CAAC,sCAAiB,CAAC,wBAAwB,CAAC,qBAAqB,CAAC,CAAC;gBAC7E,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,MAAM,CAAC,YAAY,CAAC;gBACxB,CAAC;YACL,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;;;OAAA;IA7BL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,iBAAiB;YAC3B,MAAM,EAAE,CAAC,sBAAsB,CAAC;YAChC,QAAQ,EAAE,mIAEQ;SACrB,CAAC;mBAGgB,WAAI,EAAE;;sBAHtB;IAwBF,qBAAC;AAAD,CAvBA,AAuBC,IAAA;AAvBY,sBAAc,iBAuB1B,CAAA","file":"account/signup/control-message.component.js","sourcesContent":["import { Component, Host } from '@angular/core';\r\nimport { NgFormModel } from '@angular/common';\r\nimport { ValidationService } from '../shared/validation.service';\r\n\r\n@Component({\r\n    selector: 'control-message',\r\n    inputs: ['controlName: control'],\r\n    template: `<div *ngIf=\"controlMessage !== null\" class=\"alert alert-info\">\r\n                    {{controlMessage}}\r\n               </div>`\r\n})\r\nexport class ControlMessage {\r\n    controlName: string;\r\n    constructor( @Host() private _formDir: NgFormModel) { }\r\n\r\n    public get controlMessage() {\r\n        let control = this._formDir.form.find(this.controlName);\r\n\r\n        if (control.dirty && !control.valid) {\r\n            let selectedErrorProperty: string;\r\n            for (let propertyName in control.errors) {\r\n                if (control.errors.hasOwnProperty(propertyName)) {\r\n                    selectedErrorProperty = propertyName;\r\n                }\r\n            }\r\n            if (selectedErrorProperty) {\r\n                return ValidationService.getValidatorErrorMessage(selectedErrorProperty);\r\n            }\r\n            else {\r\n                return \"Checking..\";\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}"],"sourceRoot":"/source/"}